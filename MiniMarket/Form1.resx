<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAA+AXIDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2XUdUXT3RTEzlxkEHFRWeuQ3U6wtG0bN0JOQTVXxIObY/7w/l
        WECyMCCQwOQfSvnMZmWIw+LcE/dVtPkB3lFVNOvBe2ay/wAY4cehq3X0NOpGpBTjswCoLu7is4DLKTjo
        AOpNT1y2tXZurwxocxw8cdz3NcmPxf1ai5Ld7AaEPiBJp0i+zsN7BQd3rWzXE2X/AB/W/wD10X+ddtXP
        lOKq4iEnVd7MCm1zeDWEtRYE2TQGRrzzRhXBwE29eRzmrlcL8TdctbLTbTRLuy1CeLWZPIMtk21osFeQ
        cHJ5HHcA12VhZpp2nW1lG8kiW8SxK8rbmYKMZJ7mvXa0uO2hYooopCCiiigAooooArX14lhZTXDRySmN
        GdYYhmSQgZ2qO5PpUltN9ptYZ/Lki8xA/lyLhlyM4I7EVwvjzTdCvfFnhNtV1C+trr7UVtI7dcpIwKn5
        j/DzgZHrXf8AU02tB9DMe5nRb+JpcSRDzI2IH3f88VMl01wtp5bY8wb3OOw6j86W5sfPu4pw+0AbZFx9
        9c5x+dFlYm0aTL7gT8gx91c5x+Zrz4wrqryv4e9/O/5aCJZblY5lhVGklYFgq46evNOt7iO5hEqZxkgg
        8EEdQailt5Pti3ULLuCbGVuhHWnWtqLe2MRbcWJZz0yT1reLq+0aa01/S36/1uDF1CJvLbY4ikbYkhAw
        T/Opp7hIAu4FmdtqqvUmqiafIIobd5FMML7gQPmbHQGp7u2eaSCWJlEkLbgGHByMGs4yr+zba10/4P3d
        AGWEskn2nzC3yzMAGPQccVcqrZ28tuZjI6N5jl/lGMZq1W2HUlTSluBQikmvY5JknMKBiqAKD07nNWt5
        jtvMchyqZYr3wO1VVs54BNHA8ZhlJIVwcqT1xiporYx6ctsWBIj2bvwrKl7RfEne299L+QDra5F0m9Y5
        FUgFSwxuz6VGNQiMyoFba7mNX7Fh196mtozDbRRMQSihSR3xVW2sXtpjt8kx7iwYp84B7Zpt10oW+f8A
        X3gWZ7hYWRNpZ3ztVe+OtEFwlxbCePO0gnB61DeWZuJYpU2Fo8jbIMqwNWERlg2HYGxj5RhRVxdX2kk/
        h6fh/wAH+twrw6jHM0IEUirMDsZgMHFcr8WrQ3Xw21R1LCS22ToynBBVhn9Ca6eOxkjjsgHQtb5zkcHI
        xxWT8Qk3/DvX1/6cnPPtzTwrq/8AL3fT8lf8bjjufO/gfxrruh+I9PSLULiW0muEimtpZCyMrEA8Hoee
        or6uPBIr4w0L/kYdL/6+4v8A0MV9nt94/WuystUXU3EooorEzCiiigAooooAKKK5Dx/48s/BGkGQ7JtS
        mH+jWpP3v9psdFH69KaTbshpXOvoqrplxNeaTZ3VxGsU00CSSRqchWZQSB+dWqQgooooAwvEn+rtz7t/
        SqepWe20tbtB8rRqr/XHBq74kH7m3P8AtH+VaFtElxpEMTjKvEAfyrwK2GWIxVam97K3qI5/R737JeBX
        OIpPlb2PY11lcPc272tw8L9VOM+o9a6bRr37XZhHOZYvlb3HY1OTYlxk8LU3W36r+vMZLql59jsmYH94
        3yp9fWsSCz8vRLi6cfNIAFz6ZH86fds2rawsCH90h259h1NaurKqaPKijCqoAH4itKv+1Sq1n8ME0vW2
        rA5my/4/rf8A66L/ADrtq4my/wCP63/66L/Ou2pZD/Dn6iOf1y7ube9RYpmRNgYAevNbkBY28Zc5YoMn
        3xXK6xcC41KQj7qfIPw/+vXRaXcC506Jv4lG1vqK0wOI58ZVjzXXT5DK+q6nNYSxqkSMrjOWJpbLWYbi
        CR5gIjGMtzkH6VV8SD5Ldvdh/KsrTrU3t2sJJCfefHoKwr43E0sc6UHdPZeq/wAwNSbxCxYi2t8gfxP/
        AICoF8RXQb5oomHoARXRRQxwRhIkCKOwFYHiG2SOSKdFCl8hsd60xkMbRpe29re26tYDYsL+O/hLoCrK
        cMp7VarmvDjEXkq9jHk/nXS16GX4iWIw6nLcDnNcuJ4tRULJgKoZOB8p6ZHpXQx7jEuSC20Z+tchqtwL
        nUZXH3Qdo/Cun064FzYQyd9uG+oriy/Ee0xVaPNft94Hit18dtZ0/W7i0utBsvLt5mikRJXD/KcHBPHb
        0rttY+LvhzSdBsdRBluJ72ETQ2ceN4HT5z0UZBHvjivBPiDD5HxD1+Mf8/rn8+f616R8F/A9nqNm/ibV
        oVuishhs4pRuVdvV8HrzwPTBr6KUIpXNXGNrlK5/aA1gzf6PodjHH2WSR2bH1GP5V03hH43WetanBp2s
        WAsJZ2CRzxyboyx6A55XPrzXc+KfCul+I9AurK5s4N5iYwyiMBonA4IP1r5CBaNwQSrocgjsRSioTWwR
        UZI+m/GXxb0Xwpdvp8MT6jqKHDxRMFSM+jN6+wBrgG/aA1vzsjRdPEf9wu+fzz/Suv8AhF4Ks7Tw9D4h
        1G3S41TUczLJMu4xoTxjPc9SevNaHxZ8L6bqXge/v/skKX1jH50UyIA2ARuUkdQRmpXIny2EuVOwzwL8
        WdP8X3o0y5tTYakykxoX3pLjqFPGD3wa9Er458K3Elr4v0aeJirpew4P/AwK+xmyN23Ge2aVSKi9BTik
        9DkvGnxD0bwVEqXbNcX0i7o7SEjcR6seij3NeT3fx88RPMWtdM06CEn5VkV5D+eR/KvU9G+HOlWl9Nq2
        sImr61cOZJbm4Xcik9kQ8ADoM88V0t5o+mahZvaXmn201u42tG8Qxj+n4UJwXS4JxR4/4c+PRlvI7fxD
        p0UMLsAbq1JwnuyHPH0Ne1xyJNEksTq8bqGVlOQwPQivj7xfoqeHfF2qaTGSYracrGT12Hlf0Ir6N+El
        9Jf/AA00ppWLNCHgyfRWIH6YqqkEldDnFJXRgfEP4p6t4M8SrpdtpdnNC0KTLLK7ZYHIIwMYwQa2vB3x
        P0zxLoF9qN8qaa+ngG6DvlAp6Mp6nOCMdc+tef8A7QUG3XNEuP79tIh/4CwP/s1cH4J0K88Wa3F4ehna
        G1ncT3Tr2RAeff72B7mmoRcLjUU43PStb+P2y5aPQtIWSFTgT3jkFvcKvT8TXQWXjJ/HHwj8SX1xZpbT
        wW08MiIxZSRHkEZ57/pV5/gz4Kew+zDT5kcDH2hbhvMz68nH6UsfhC38FfC7xDplvcvcq9vczGR1Ck5T
        AHHoAKm8Ogrx6Hzn4bBbxRpAAyTew4/77FfZZ+8frXxv4W/5G3Rf+v6H/wBDFfT/AI58caf4K0o3Fxia
        9lyLa1B5kPqfRR3NVVTbSQ6iu0UPiL8Qo/A1paiK3ju765Y7YHkK7UHVjjtnA/P0qh8NviNqfji+vIbr
        R4reC3jDfaIXYruJ4U57kZPHpXmXh3wd4h+KmuS67q87wWMj/vLpl+8B/BEvoOmeg9zX0Fomh6d4d0qL
        TdLt1gto+gHJY92Y9yfWpkoxVupLSSt1Ls88NrbyXFxKkUMalnkdsKoHUk15FrnxwVtQGn+FNJbUZWbY
        k0obEh/2EHJ/HH0rH+OPjGWfUF8LWcpW3gCyXm0/fc8qh9gMH6n2re+B3hSGz0J/ElxEDd3jMluzDmOI
        HBI/3iD+AFCilHmkNRSV2YmofFj4gaA8T614ctbeKQ/L5tvIgb2DbiM12vgf4r6V4vuV0+eE6fqbD5Im
        fckvrsb19j+tb/jzT7bU/AutW90qsi2ryqT/AAsoLKR7givki2uprO5hu7dzHNC4kjZTyrA5BqoxjNbD
        SUkfSXxS+IWpeC1tbbTrGOSS7jZhdS5KxEHGMdCe/J/Cvna+1S71bVG1DU55LueRw0ju3LD09h/Kvqrx
        dFHqvw21Q3Uat5mmtNgj7rhNwI+hr5U0eNZ9a0+KRA6SXMaspGQwLDIp0rWHTtY9hH7QYVAqeGgAowB9
        s/8AsK9T8Ha7N4m8K2WsXFstu90GbylJIADEDk9eBUDfD3wf5hP/AAjenZz/AM8RXQxRR28KQwxpHFGo
        VERcKoHQAdhWUnFrRGbceg+iiioJMTxJ/qLf/fP8q0dNOdMt/wDcFZ3iT/UW/wDvH+VX9KOdLt/9yvKo
        v/hRqei/QCnr1l5sAuUHzxj5vdf/AK1YFtdSWjs0RwWQqfxrtiAwIIyDwRXI3OntFqgtFztdhsPsa4c2
        wsoVY4ilu9Pn0+8DY0G08m1Nww+eXp7LVjWf+QVP9B/MVeRBGioowqjAqjrP/IKn+g/mK9SVBUMFKmuk
        X+QHMWX/AB/W/wD10X+ddsTgE+lcPanF3Cf+mi/zruDzxXn5D/DmvNAcGxLOzHqTmuh8OMTbzr2Dg/pX
        PyKUldD1ViK6Lw4mLSV/7z4/IV52UKX1xfMQ3xIP9HgP+2f5VV8Of8fkv/XP+tWvEh/0eAf7Z/lVXw7/
        AMf0g/6Z/wBRXZW/5Gy+X5AdLWJ4k/1EH++f5Vt1h+JP9Vb/AO8f5V6uaf7pP5fmhlbw6P8ATpD6R/1F
        dHIdsbN6Amud8Of8fc3/AFz/AK10bDcpHqMVjk6/2RW8wODJycnvXS+HWJspV7CT+grm2BVip6g4rpfD
        ybbB3/vSH9K8XJk/ra9GI+ZficpX4l69nvcZ/wDHRXvXwi/5JhpH/bX/ANGNXgvxNbd8S9eOc4ucfkor
        3j4Ptu+GGlc52tMD7fvGr7ep8CNp/Cjtpv8AUSf7p/lXxNN9+T/eNfbE5220reiMf0r4nkOWc+pNKh1C
        kfZuiQrb6BpsKABY7WJQB7IKzPHrBfh94gLdPsEo/NcVq6MSdC04k5JtYv8A0AVi/EVgvw618n/nzcVk
        viM1ufLvhtd3irR16ZvYf/QxX2UfvH618deEufGeiZ/5/wCH/wBDFfTXxG8Ry+FvBV9qFscXbYhgP912
        OM/gMn8K1qq7SNKiu0ir4v8Aif4f8IyNazSPeagBza2+CV/3m6L/AD9q4KD4t+NvEtw0XhnwzEyg4JCP
        Nt+rZCivMfCWjN4r8ZafplxK5F3OWnkJyxUAs5z6kA19bafp9npVjFY2FvHb2sS7UjjGAP8AE+9KSjDT
        diaUT5J8aSazN4tvpPEEUcOqMU89I8bR8ox0JHTHevf/AILgj4Z2WRjM8xH/AH2a8U+KrbvibrfOcSoP
        yRa9v+Df/JMNM/66T/8Ao1qqp8CKn8JxX7QgHneHz32z/wA0qr+z7bK2t61dEfNHbRxr/wACYk/+girP
        7Qjf6T4fXvsnP6pTP2eyPt2vjv5UJ/VqP+XQvsHutYnjH/kSdd/68Jv/AEA1t1z/AI7kEXgHX3P/AD4S
        jr6qR/WsFuZrc+TtIuZbPWLG6gh86aGdJI4ufnYMCBx6mtZvEX9r+NYtY8VxyX0JnH2mAErhAfuqOwHp
        3x71neH22eJNKb0vIf8A0MV6N8bPBn9ka0PEFlFiyvnxOFHEc3r9G6/UGuttXsbtq9j33TprK4022m05
        omsniUwGIYTZjjA7CrI6188fCH4h/wBh3a+H9Wmxptw/+jyueIJD2Pop/Q/U19EDrXLOLi7GMo2Z8Z+I
        r59T8S6pfSElp7qR+fTccfpivVNA+KOt+EfDWm2Wp+FJHsUt1+zXMbMgkTGQckEE/iK8r8Q2MmmeJNTs
        ZQQ8F1Ihz/vHH6V9KfCfVYtX+HGmpuDvaKbWVTzgqeM/8BIrepZRWhrO1jyfxh8X9T8WaY+j6bpxsrec
        bZtrmSWQf3eAMA/rUXgP4T6vruowXmsWktjpMbB3Ey7ZJgOdqqeQD6mvo+O2t4STFbxRk9SiAfyqWs/a
        WVoqxnz2VkYXjIrF4F10jCqunzADsPkOK+UPD3/IyaV/1+Q/+hivqvx4CfAGvgDP+gy/+g18o6LKsGu6
        dKxwqXUTE+wcVdLZlU9j7Qb7x+tJSnqcUlc5kFFFFAGD4kPFuvux/lWlpX/ILt/93+tF7psF+VaUuCow
        NpqzDEkEKRRjCoMCvPpYapHGTrvZqy/D/IB9IVUsGKgsOhxyKWivQAKo6x/yCp/oP5ir1NkjWWNo3Xcr
        DBBrKtB1KcoLqmgOGjO2VG9GBru8jr2rKHh+yDZzKR6bq1AABjsBivNyrB1cKpqpbW36gcPcSCW5lkHR
        nJ/Wui8PSBrF4+6P/OpH0GydywEi57K3FW7SzhsoykKkAnJJOSawwGXYihifazatqBkeJG/490/3j/Ko
        PDv/AB/v/wBcz/MVs3mmQXzq8pcMBgbTTrLToLEN5QYs3VmOTWksBWlj/rDty/8AAAt1h+JAfKtzjgMw
        /lW5UU9vFcxGKZAyntXo4yg69CVJPVgczol1Ha3p81gquu3cegNdNHcwyq7RuHVOpHSs8eH7INkmUj0L
        VpRwxxRCJECoBjaBxXJluHxOHh7Opa34gcPI2+V3/vMTXTeH5A+nbB1RyD+PNK+gWTMSPMXPYNxV21tI
        bOLy4QVBOSc8k1y5fl1fD1/aTtbUD5H8b3IvPHWuzhtwa+lAPqA2P6V9BfBoEfDLT8gjMsxH/fZqjc/A
        3wrc3bXBuNTXexd1E4OSTk8lc16BpemWejaZb6dYQiG1t02RoDnA+vc9819HOacbI0lJNWRNcgm1mAGS
        Y2AH4V8UODuZcHdkjFfblcO/wm8KN4lTW1tZUlWXzmtxJ+5Z+uduPXnAOKVOaje4oSUTrdKjeHR7GKQY
        dLaNWHoQoBrD+Isby/DrX0jUs32RjgegwT+grp6RlV0ZHUMrDDKRkEelQnZ3Jvrc+L9Ivv7M1qwv9pYW
        1xHMQO4Vgf6V7z8Ttb0Xxh4Ee30TUor27VlvVt4cs/lpneWA+7gHvjpir9/8EPCV5ePcRfbbNXOTDBKN
        g+gYEge2a6vw14N0PwlbPDpNmI2lGJZpDvkk9ix7e3StZTi7NGkpJ6nyv4X11/DXibT9YjTzPs0u5kzj
        epGGH5E171e/HLwpBpxntBeXNyV+W2MJQg+jMeAPpmpNc+CnhjV7x7q2e5015DudLYgxk+ykcfhxVjw7
        8HvC+gXaXbpPqNzGdyNdkFFPqEAAz9c05ShLVg5RerPnvxVPql54jur7WLc297ebblo8Y2q4BXj/AHcV
        7D8IPHOh6f4MbS9V1KCyns5XdRO20PGx3ZX15J4613Xiz4faD4yeObUoZUuo12rcQPtfb6Hggj6isrQv
        g94U0O9S88ie9njbdH9rcMqnsdoABP1zSc4yjZick1Y4H49XAu7rw5cRBvIltZHjZlKk5KnkHkcYqH4A
        XITxTqtsTgy2QYD12uP/AIqvYvFng3SfGdjFa6okgMLF4pYm2uhPXB9D6Gsrwt8LtB8I6oupWEt9JdKj
        IGlmG3aeowAM0udcnKHMuWx2tch8UbgW3w01xj/HAIx9WZR/WuvrJ8R+HbDxTo76XqXnfZndXIhk2HI6
        c1nF2epC3PkXRs/27p2M5+1RYx/vivsPW9Is9e0q70u/j8y2uFKsO49CPQg8iuL0P4OeGND1eHUkN5cy
        wOHiS4kBRWHQ4AGce9eg1pUmpNWKnK70PkHxf4R1DwdrUmn3yFoiSbe4A+WZPUe/qO1erfCb4nrPHB4b
        164xMuEs7qQ8OO0bH19D36V6zrGi6br9g1jqtnFdW7c7ZB0PqD1B9xXCn4G+DzMXH9ohTyIxc8D9M/rT
        9pGStIfMmrM5n41eAriW5bxVpkJkUoFvo0GSuOBJj0xwfoD61514G8dah4I1N57ZRcWc+BcWzNgOB0IP
        Zh619WWVnFYWENlE0jxQoI1Mzl2IHqx5P41xWvfB/wAJ65O9wtvLp9w5yzWbBVJ9dpBH5YojUVuWQKat
        ZmfB8dPCUluHmj1GGTHMZgDc/UHFY158ZNS8RX8ejeC9Hf7XcHalxdYJUd22jgAdck/hV2D4A+H0lDTa
        rqUqDqg2Ln8cV33h3wjofhW3aLSLBIC4w8pO6R/qx5/DpSbprYXurYlGjyS+FG0a9u3uppbRrea4kPMj
        MpBb8zXyBfWNzpmoXFjdxtFc28hjkU8EMDX2rXI+LPhv4e8YTfab6CSC9A2/abZgrkDoG4Ib8RSpz5Xq
        EJW3OU8NfG7QW0KBNdNzb6hDGEkKQl1lIGNwI6Z9DWv4W8e33jnxKV0ixa10GzBa5ubhQXmYj5UA6L6n
        qcDtWXa/ATw7DOr3GpajcRg/6vKID9SBmvStL0mw0TT4rDTbWO2tYh8saD9T6n3NEnDoD5ehcooorMg/
        /9k=
</value>
  </data>
</root>